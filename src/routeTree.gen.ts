/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutsWatchlistlayoutImport } from './routes/_layouts/watchlistlayout'
import { Route as LayoutsResultslayoutImport } from './routes/_layouts/_resultslayout'
import { Route as LayoutsResultslayoutResultsImport } from './routes/_layouts/_resultslayout.results'
import { Route as LayoutsResultslayoutDetailImdbIDImport } from './routes/_layouts/_resultslayout.detail.$imdbID'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutsWatchlistlayoutRoute = LayoutsWatchlistlayoutImport.update({
  path: '/watchlistlayout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutsResultslayoutRoute = LayoutsResultslayoutImport.update({
  id: '/_layouts/_resultslayout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutsResultslayoutResultsRoute =
  LayoutsResultslayoutResultsImport.update({
    path: '/results',
    getParentRoute: () => LayoutsResultslayoutRoute,
  } as any)

const LayoutsResultslayoutDetailImdbIDRoute =
  LayoutsResultslayoutDetailImdbIDImport.update({
    path: '/detail/$imdbID',
    getParentRoute: () => LayoutsResultslayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layouts/_resultslayout': {
      preLoaderRoute: typeof LayoutsResultslayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layouts/watchlistlayout': {
      preLoaderRoute: typeof LayoutsWatchlistlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layouts/_resultslayout/results': {
      preLoaderRoute: typeof LayoutsResultslayoutResultsImport
      parentRoute: typeof LayoutsResultslayoutImport
    }
    '/_layouts/_resultslayout/detail/$imdbID': {
      preLoaderRoute: typeof LayoutsResultslayoutDetailImdbIDImport
      parentRoute: typeof LayoutsResultslayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LayoutsResultslayoutRoute.addChildren([
    LayoutsResultslayoutResultsRoute,
    LayoutsResultslayoutDetailImdbIDRoute,
  ]),
  LayoutsWatchlistlayoutRoute,
])

/* prettier-ignore-end */
